/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package lmfvgo.vista;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import lmfvgo.db.JugadoresDAO;
import lmfvgo.excepciones.LMFVGOException;
import lmfvgo.reportes.vo.CredencialVO;
import lmfvgo.util.ReportesManager;

/**
 *
 * @author cgarcia
 */
public class CredencialesJugadorVista extends FormBase {
    private static final long serialVersionUID = 5848702952420491646L;

    private final JugadoresDAO jugadoresDAO;
    private final ReportesManager reportesManager;
    
    /** Creates new form CredencialesJugadorVista */
    public CredencialesJugadorVista() {
        initComponents();
        jugadoresDAO = new JugadoresDAO();
        reportesManager = new ReportesManager();
        
        inicializarJugadores();
    }
    
    private void inicializarJugadores() {
        List<String> jugadores = jugadoresDAO.consultaJugadoresAltaTodos();
        lstJugadores.setModel(new DefaultListModel());
        DefaultListModel model = new DefaultListModel();
        model.removeAllElements();
        for (String jug : jugadores) {
            model.addElement(jug);
        }
        lstJugadores.setModel(model);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstJugadores = new javax.swing.JList<String>();
        jLabel1 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnQuitarJugador = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstCred = new javax.swing.JList<String>();
        jLabel2 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setClosable(true);
        setTitle("CREDENCIALES POR JUGADOR");

        lstJugadores.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstJugadores.setToolTipText("");
        jScrollPane1.setViewportView(lstJugadores);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Jugadores");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnAgregar.setText(">>");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarJugadores(evt);
            }
        });

        btnQuitarJugador.setText("<<");
        btnQuitarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarJugadores(evt);
            }
        });

        lstCred.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstCred);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Seleccionados");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarCredenciales(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAgregar)
                                    .addComponent(btnQuitarJugador))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenerar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerar)
                    .addComponent(btnLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuitarJugador)
                        .addGap(135, 135, 135))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarJugadores(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarJugadores
        if (lstJugadores.getSelectedValue() != null && !lstJugadores.getSelectedValue().isEmpty()) {
                String seleccionado = lstJugadores.getSelectedValue();
                ((DefaultListModel) lstJugadores.getModel()).removeElementAt(lstJugadores.getSelectedIndex());

                if (lstCred.getModel() == null || lstCred.getModel().getSize() == 0) {
                    lstCred.setModel(new DefaultListModel());
                }
                ((DefaultListModel) lstCred.getModel()).addElement(seleccionado);
            } else {
                agregarMensajeAdvertencia("Debe seleccionar un jugador");
            }
    }//GEN-LAST:event_agregarJugadores

    private void quitarJugadores(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarJugadores
        if (lstCred.getSelectedValue() != null && !lstCred.getSelectedValue().isEmpty()) {
            String seleccionado = lstCred.getSelectedValue();
            ((DefaultListModel) lstCred.getModel()).removeElementAt(lstCred.getSelectedIndex());

            if (lstJugadores.getModel() == null || lstJugadores.getModel().getSize() == 0) {
                lstJugadores.setModel(new DefaultListModel());
            }
            ((DefaultListModel) lstJugadores.getModel()).addElement(seleccionado);
        } else {
            agregarMensajeAdvertencia("Debe seleccionar un jugador");
        }
    }//GEN-LAST:event_quitarJugadores

    private void generarCredenciales(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarCredenciales
        try {
            if (lstCred.getModel().getSize() == 0) {
                agregarMensajeAdvertencia("No se seleccionaron registros para generar las credenciales");
                return;
            }
            
            int conteo = lstCred.getModel().getSize() / 2;
            if ((lstCred.getModel().getSize() % 2) > 0) {
                conteo += 1;
            }
            List<Integer> idsLista1 = getIdsLista(0, conteo);
            List<Integer> idsLista2 = getIdsLista(conteo, lstCred.getModel().getSize());
            
            List<CredencialVO> creds1 = jugadoresDAO.consultaCredenciales(idsLista1, null);
            List<CredencialVO> creds2 = jugadoresDAO.consultaCredenciales(idsLista2, null);
            
            reportesManager.credenciales(creds1, creds2);
        } catch (LMFVGOException ex) {
            agregarMensajeError(ex.getMessage());
        }
    }//GEN-LAST:event_generarCredenciales

    private List<Integer> getIdsLista(int idxInicio, int idxFinal) {
        List<Integer> lista = new ArrayList<>();
        for (int i = idxInicio; i < idxFinal; i++) {
                String elemento = (String) lstCred.getModel().getElementAt(i);
                lista.add(Integer.parseInt(elemento.split(" - ")[0]));
        }
        return lista;
    }
    private void limpiar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar
        inicializarJugadores();
    }//GEN-LAST:event_limpiar


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnQuitarJugador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstCred;
    private javax.swing.JList<String> lstJugadores;
    // End of variables declaration//GEN-END:variables

}
