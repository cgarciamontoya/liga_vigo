/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package lmfvgo.vista;

import java.util.Date;
import java.util.List;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import lmfvgo.db.EquiposDAO;
import lmfvgo.db.TorneoDAO;
import lmfvgo.modelo.Equipos;
import lmfvgo.modelo.Juegos;
import lmfvgo.util.GeneradorRolJuegos;

/**
 *
 * @author cgarcia
 */
public class JuegosRolVista extends FormBase {

    private final EquiposDAO equiposDAO;
    private final TorneoDAO torneoDAO;
    private Map<Integer, List<Juegos>> rol = null;
    
    /** Creates new form JuegosRolVista */
    public JuegosRolVista() {
        initComponents();
        equiposDAO = new EquiposDAO();
        torneoDAO = new TorneoDAO();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cboFuerza = new javax.swing.JComboBox<>();
        btnGenerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRol = new javax.swing.JTable();

        setTitle("Rol de Juegos");

        jLabel1.setText("Fuerza");

        cboFuerza.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Primera", "Segunda" }));

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarRol(evt);
            }
        });

        tblRol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Local", "VS", "Visitante"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRol);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboFuerza, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGenerar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboFuerza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarRol(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarRol
        if (cboFuerza.getSelectedIndex() == 0) {
            agregarMensajeAdvertencia("Debe seleccionar la fuerza");
            return;
        }
        List<Equipos> equipos = equiposDAO.consultarEquipo(null, cboFuerza.getSelectedIndex());
        if ((equipos.size() % 2) > 0) {
            equipos.add(new Equipos(99, "DESCANSA", cboFuerza.getSelectedIndex(), new Date()));
        }
        Map<String, Object> torneo = torneoDAO.torneoActivo();
        switch (equipos.size()) {
            case 10 :
                rol = GeneradorRolJuegos.generarRol10(equipos, (Integer) torneo.get(TorneoDAO.ID_TORNEO));
                break;
            case 12 :
                rol = GeneradorRolJuegos.generarRol12(equipos, (Integer) torneo.get(TorneoDAO.ID_TORNEO));
                break;
            case 14 :
                rol = GeneradorRolJuegos.generarRol14(equipos, (Integer) torneo.get(TorneoDAO.ID_TORNEO));
                break;
            case 16 :
                rol = GeneradorRolJuegos.generarRol16(equipos, (Integer) torneo.get(TorneoDAO.ID_TORNEO));
                break;
            default :
                agregarMensajeError("No se puede generar el rol para un torneo de menos de 10 equipos o mayor de 16");
                return;
        }
        limpiarTabla(tblRol);
        DefaultTableModel modelo = (DefaultTableModel) tblRol.getModel();
        for (Integer jornada : rol.keySet()) {
            List<Juegos> juegos = rol.get(jornada);
            modelo.addRow(new Object[]{("Jornada " + jornada), "", ""});
            for (int i = 0; i < juegos.size(); i++) {
                modelo.addRow(new Object[]{juegos.get(i).getLocalNombre(), "VS", juegos.get(i).getVisitanteNombre()});
            }
        }
        
    }//GEN-LAST:event_generarRol


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JComboBox<String> cboFuerza;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRol;
    // End of variables declaration//GEN-END:variables

}
